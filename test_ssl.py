#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å OKX API
"""

import requests
import ssl
import socket
from datetime import datetime

def test_ssl_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å OKX API"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å OKX API...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS...")
    try:
        ip = socket.gethostbyname('www.okx.com')
        print(f"‚úÖ DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥: www.okx.com -> {ip}")
    except socket.gaierror as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ DNS: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞...")
    try:
        context = ssl.create_default_context()
        with socket.create_connection(('www.okx.com', 443), timeout=10) as sock:
            with context.wrap_socket(sock, server_hostname='www.okx.com') as ssock:
                cert = ssock.getpeercert()
                print(f"‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤–∞–ª–∏–¥–µ–Ω")
                print(f"   –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤—ã–¥–∞–Ω –¥–ª—è: {cert.get('subject', [])}")
                print(f"   –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ: {cert.get('notAfter', 'Unknown')}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SSL: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: HTTP –∑–∞–ø—Ä–æ—Å
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP –∑–∞–ø—Ä–æ—Å–∞...")
    try:
        response = requests.get(
            'https://www.okx.com/api/v5/public/time',
            timeout=10,
            verify=True
        )
        if response.status_code == 200:
            print("‚úÖ HTTP –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω")
            data = response.json()
            print(f"   –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞ OKX: {data.get('data', [{}])[0].get('ts', 'Unknown')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
    except requests.exceptions.SSLError as e:
        print(f"‚ùå SSL –æ—à–∏–±–∫–∞ –ø—Ä–∏ HTTP –∑–∞–ø—Ä–æ—Å–µ: {e}")
        return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False
    
    print("\n" + "=" * 50)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å OKX API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    return True

def check_system_info():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    print("\nüìã –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    print("=" * 30)
    
    import platform
    print(f"–û–°: {platform.system()} {platform.release()}")
    print(f"Python: {platform.python_version()}")
    print(f"Requests: {requests.__version__}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL –≤–µ—Ä—Å–∏–∏
    try:
        print(f"SSL: {ssl.OPENSSL_VERSION}")
    except:
        print("SSL: –í–µ—Ä—Å–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
    print(f"–í—Ä–µ–º—è: {datetime.now()}")
    
    check_system_info()
    
    if test_ssl_connection():
        print("\nüéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º!")
        print("\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –û–±–Ω–æ–≤–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã: sudo apt update && sudo apt install ca-certificates")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª: sudo ufw status")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS: nslookup www.okx.com")
        print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è") 