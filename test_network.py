#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å FastAPI —Å–µ—Ä–≤–µ—Ä–æ–º
"""

import requests
import socket
import time
from datetime import datetime

def test_network_connection(server_url: str = "http://109.73.192.126:8001"):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å FastAPI —Å–µ—Ä–≤–µ—Ä–æ–º"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å FastAPI —Å–µ—Ä–≤–µ—Ä–æ–º...")
    print("=" * 60)
    print(f"–°–µ—Ä–≤–µ—Ä: {server_url}")
    print(f"–í—Ä–µ–º—è: {datetime.now()}")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –∏ –ø–æ—Ä—Ç–∞...")
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ö–æ—Å—Ç –∏ –ø–æ—Ä—Ç –∏–∑ URL
        if server_url.startswith("http://"):
            host = server_url[7:].split(":")[0]
            port = int(server_url.split(":")[-1].split("/")[0])
        else:
            host = server_url.split(":")[0]
            port = int(server_url.split(":")[-1].split("/")[0])
        
        print(f"   –•–æ—Å—Ç: {host}")
        print(f"   –ü–æ—Ä—Ç: {port}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
        ip = socket.gethostbyname(host)
        print(f"   ‚úÖ DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥: {host} -> {ip}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(10)
        result = sock.connect_ex((host, port))
        sock.close()
        
        if result == 0:
            print(f"   ‚úÖ –ü–æ—Ä—Ç {port} –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"   ‚ùå –ü–æ—Ä—Ç {port} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥ –æ—à–∏–±–∫–∏: {result})")
            return False
            
    except socket.gaierror as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ DNS: {e}")
        return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ—Å—Ç–æ–π HTTP –∑–∞–ø—Ä–æ—Å
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    try:
        response = requests.get(
            f"{server_url}/api/v1/health",
            timeout=10,
            headers={'User-Agent': 'Network-Test/1.0'}
        )
        
        if response.status_code == 200:
            print("   ‚úÖ HTTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
            print(f"   –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {response.elapsed.total_seconds():.3f}s")
            print(f"   –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.content)} –±–∞–π—Ç")
        else:
            print(f"   ‚ö†Ô∏è HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            
    except requests.exceptions.ConnectTimeout:
        print("   ‚ùå –¢–∞–π–º–∞—É—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        return False
    except requests.exceptions.ConnectionError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞...")
    try:
        test_data = {
            "wait_minutes": 1,
            "buy_amount": 10.0
        }
        
        response = requests.post(
            f"{server_url}/api/v1/trade",
            json=test_data,
            timeout=30,
            headers={'User-Agent': 'Network-Test/1.0'}
        )
        
        if response.status_code == 200:
            print("   ‚úÖ –¢–æ—Ä–≥–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –æ—Ç–≤–µ—á–∞–µ—Ç")
            print(f"   –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {response.elapsed.total_seconds():.3f}s")
        elif response.status_code == 500:
            print("   ‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É 500")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:300]}...")
        else:
            print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            
    except requests.exceptions.ConnectTimeout:
        print("   ‚ùå –¢–∞–π–º–∞—É—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Ç–æ—Ä–≥–æ–≤—ã–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–º")
        return False
    except requests.exceptions.ConnectionError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Ç–æ—Ä–≥–æ–≤—ã–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–º: {e}")
        return False
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞ –∫ —Ç–æ—Ä–≥–æ–≤–æ–º—É —ç–Ω–¥–ø–æ–∏–Ω—Ç—É: {e}")
        return False
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    try:
        for i in range(3):
            start_time = time.time()
            response = requests.get(
                f"{server_url}/api/v1/health",
                timeout=5
            )
            elapsed = time.time() - start_time
            
            if response.status_code == 200:
                print(f"   ‚úÖ –ó–∞–ø—Ä–æ—Å {i+1}: {elapsed:.3f}s")
            else:
                print(f"   ‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å {i+1}: {response.status_code} ({elapsed:.3f}s)")
            
            time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏: {e}")
        return False
    
    print("\n" + "=" * 60)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å FastAPI —Å–µ—Ä–≤–µ—Ä–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ.")
    return True

def check_system_network():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
    try:
        import subprocess
        result = subprocess.run(['nslookup', '109.73.192.126'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("‚úÖ DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–æ–º")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å DNS: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ ping
    try:
        result = subprocess.run(['ping', '-c', '3', '109.73.192.126'], 
                              capture_output=True, text=True, timeout=15)
        if result.returncode == 0:
            print("‚úÖ Ping —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå Ping –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å ping: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ telnet (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    try:
        result = subprocess.run(['telnet', '109.73.192.126', '8001'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("‚úÖ Telnet —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå Telnet —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception:
        print("‚ö†Ô∏è Telnet –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
    print(f"–í—Ä–µ–º—è: {datetime.now()}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    check_system_network()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    if test_network_connection():
        print("\nüéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ")
        print("2. –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö n8n")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–π–º–∞—É—Ç—ã –≤ n8n")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ n8n –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
    else:
        print("\nüí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º!")
        print("\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç 8001 –æ—Ç–∫—Ä—ã—Ç")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏")
        print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞: tail -f logs/app.log") 